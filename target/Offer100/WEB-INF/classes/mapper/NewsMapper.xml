<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wys.recruitment.mapper.NewsMapper" >
  <resultMap id="BaseResultMap" type="com.wys.recruitment.pojo.News" >
    <id column="nid" property="nid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="receivetime" property="receivetime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="classify" property="classify" jdbcType="VARCHAR" />
    <result column="isread" property="isread" jdbcType="INTEGER" />
    <result column="mid" property="mid" jdbcType="VARCHAR" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    nid, uid, title, content, createtime, receivetime, state, classify, isread, mid, 
    cid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from news
    where nid = #{nid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from news
    where nid = #{nid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wys.recruitment.pojo.News" >
    insert into news (nid, uid, title, 
      content, createtime, receivetime, 
      state, classify, isread, 
      mid, cid)
    values (#{nid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{receivetime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{classify,jdbcType=VARCHAR}, #{isread,jdbcType=INTEGER}, 
      #{mid,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wys.recruitment.pojo.News" >
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nid != null" >
        nid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="receivetime != null" >
        receivetime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="classify != null" >
        classify,
      </if>
      <if test="isread != null" >
        isread,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="cid != null" >
        cid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nid != null" >
        #{nid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivetime != null" >
        #{receivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="classify != null" >
        #{classify,jdbcType=VARCHAR},
      </if>
      <if test="isread != null" >
        #{isread,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wys.recruitment.pojo.News" >
    update news
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivetime != null" >
        receivetime = #{receivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="classify != null" >
        classify = #{classify,jdbcType=VARCHAR},
      </if>
      <if test="isread != null" >
        isread = #{isread,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        mid = #{mid,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
    </set>
    where nid = #{nid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wys.recruitment.pojo.News" >
    update news
    set uid = #{uid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      receivetime = #{receivetime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      classify = #{classify,jdbcType=VARCHAR},
      isread = #{isread,jdbcType=INTEGER},
      mid = #{mid,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=INTEGER}
    where nid = #{nid,jdbcType=INTEGER}
  </update>
  
  <!-- 以下是我自己写的方法 findListByCid -->
   
   <select id="findListByCid" resultType="java.util.Map" parameterType="java.lang.Integer" >
		SELECT n.nid,n.uid,n.title,n.content,n.createtime,n.mid,n.cid,n.classify
		FROM news n
		where n.cid = (SELECT c.id FROM company c WHERE c.uid = #{id})
		and n.classify = '企业消息'
   </select>
  
   
   <select id="findListByUid" resultType="java.util.Map" parameterType="java.lang.Integer" >
		SELECT n.nid,n.uid,n.title,n.content,n.createtime,n.mid,n.cid,n.classify
		FROM news n
		where n.uid =  #{id}
		and n.classify = '用户消息'
   </select>
</mapper>